(defun step (pairs)
  (setq new '())
  (mapc
   (lambda (item)
     (let* ((pair (car item))
            (count (cdr item))
            (insert (assoc pair reps)))
       (if insert
           (progn
             (let ((left (list (car pair) (cdr insert))))
               (push (cons left (+ count (or (assoc-default left new) 0))) new))
             (let ((right (list (cdr insert) (cadr pair))))
               (push (cons right (+ count (or (assoc-default right new) 0))) new))))))
   pairs)
  (message "%s %s" (length new) new)
  new)

(step template)
(step new)
(step new)
(step new)
(step new)
(step new)
(step new)
(step new)
(step new)
(step new)

;; run
(setq template
  '(
    (('B 'O) . 1)
    (('C 'B) . 1)
    (('C 'N) . 1)
    (('C 'V) . 1)
    (('H 'C) . 1)
    (('H 'H) . 1)
    (('H 'O) . 1)
    (('K 'H) . 1)
    (('N 'V) . 1)
    (('O 'H) . 1)
    (('O 'S) . 1)
    (('O 'V) . 1)
    (('P 'K) . 1)
    (('S 'C) . 1)
    (('V 'C) . 1)
    (('V 'H) . 1)
    (('V 'O) . 1)
    (('V 'V) . 2)))

(setq reps '(
 (('B 'B) . 'F)
 (('B 'C) . 'F)
 (('B 'F) . 'B)
 (('B 'H) . 'S)
 (('B 'K) . 'O)
 (('B 'N) . 'K)
 (('B 'O) . 'O)
 (('B 'P) . 'B)
 (('B 'S) . 'N)
 (('B 'V) . 'V)
 (('C 'B) . 'K)
 (('C 'C) . 'H)
 (('C 'F) . 'V)
 (('C 'H) . 'O)
 (('C 'K) . 'H)
 (('C 'N) . 'O)
 (('C 'O) . 'F)
 (('C 'P) . 'K)
 (('C 'S) . 'N)
 (('C 'V) . 'S)
 (('F 'B) . 'P)
 (('F 'C) . 'V)
 (('F 'F) . 'C)
 (('F 'H) . 'B)
 (('F 'K) . 'P)
 (('F 'N) . 'N)
 (('F 'O) . 'O)
 (('F 'P) . 'F)
 (('F 'S) . 'O)
 (('F 'V) . 'S)
 (('H 'B) . 'N)
 (('H 'C) . 'P)
 (('H 'F) . 'B)
 (('H 'H) . 'S)
 (('H 'K) . 'B)
 (('H 'N) . 'C)
 (('H 'O) . 'C)
 (('H 'P) . 'O)
 (('H 'S) . 'K)
 (('H 'V) . 'F)
 (('K 'B) . 'H)
 (('K 'C) . 'P)
 (('K 'F) . 'V)
 (('K 'H) . 'O)
 (('K 'K) . 'H)
 (('K 'N) . 'V)
 (('K 'O) . 'V)
 (('K 'P) . 'B)
 (('K 'S) . 'H)
 (('K 'V) . 'V)
 (('N 'B) . 'C)
 (('N 'C) . 'V)
 (('N 'F) . 'K)
 (('N 'H) . 'C)
 (('N 'K) . 'H)
 (('N 'N) . 'O)
 (('N 'O) . 'B)
 (('N 'P) . 'S)
 (('N 'S) . 'S)
 (('N 'V) . 'K)
 (('O 'B) . 'H)
 (('O 'C) . 'K)
 (('O 'F) . 'N)
 (('O 'H) . 'S)
 (('O 'K) . 'N)
 (('O 'N) . 'K)
 (('O 'O) . 'V)
 (('O 'P) . 'B)
 (('O 'S) . 'P)
 (('O 'V) . 'F)
 (('P 'B) . 'F)
 (('P 'C) . 'V)
 (('P 'F) . 'B)
 (('P 'H) . 'P)
 (('P 'K) . 'S)
 (('P 'N) . 'V)
 (('P 'O) . 'P)
 (('P 'P) . 'N)
 (('P 'S) . 'N)
 (('P 'V) . 'P)
 (('S 'B) . 'N)
 (('S 'C) . 'K)
 (('S 'F) . 'F)
 (('S 'H) . 'O)
 (('S 'K) . 'F)
 (('S 'N) . 'S)
 (('S 'O) . 'N)
 (('S 'P) . 'C)
 (('S 'S) . 'C)
 (('S 'V) . 'O)
 (('V 'B) . 'P)
 (('V 'C) . 'F)
 (('V 'F) . 'K)
 (('V 'H) . 'C)
 (('V 'K) . 'O)
 (('V 'N) . 'V)
 (('V 'O) . 'B)
 (('V 'P) . 'B)
 (('V 'S) . 'N)
 (('V 'V) . 'K)))
